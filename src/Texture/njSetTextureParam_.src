	.EXPORT _njSetTextureParam
	.EXPORT _ConvertUVnum
	.SECTION PSG,CODE,ALIGN=4
_ConvertUVnum:
	mov R4,R0
	cmp/eq #8,R0
	bf lbl_0000000A
	bra lbl_0000004A
	mov #0,R4
lbl_0000000A:
	cmp/eq #16,R0
	bf lbl_00000012
	bra lbl_0000004A
	mov #1,R4
lbl_00000012:
	mov R4,R0
	cmp/eq #32,R0
	bf lbl_0000001C
	bra lbl_0000004A
	mov #2,R4
lbl_0000001C:
	cmp/eq #64,R0
	bf lbl_00000024
	bra lbl_0000004A
	mov #3,R4
lbl_00000024:
	mov.w lbl_0000004E,R3
	cmp/eq R3,R4
	bf lbl_0000002E
	bra lbl_0000004A
	mov #4,R4
lbl_0000002E:
	mov.w lbl_00000050,R2
	cmp/eq R2,R4
	bf lbl_00000038
	bra lbl_0000004A
	mov #5,R4
lbl_00000038:
	mov.w lbl_00000052,R1
	cmp/eq R1,R4
	bf lbl_00000042
	bra lbl_0000004A
	mov #6,R4
lbl_00000042:
	mov.w lbl_00000054,R3
	cmp/eq R3,R4
	bf lbl_0000004A
	mov #7,R4
lbl_0000004A:
	rts
	mov R4,R0
lbl_0000004E:
	.data.w h'0080
lbl_00000050:
	.data.w h'0100
lbl_00000052:
	.data.w h'0200
lbl_00000054:
	.data.w h'0400
_njSetTextureParam:
	mov.l R14,@-R15
	mov.l R13,@-R15
	mov R4,R13
	mov.l R12,@-R15
	add #24,R13
	sts.l PR,@-R15
	mov R4,R12
	bsr _ConvertUVnum
	mov.l @(12,R13),R4
	mov R0,R14
	shll2 R14
	mov #-8,R2
	shll R14
	and R2,R14
	bsr _ConvertUVnum
	mov.l @(16,R13),R4
	mov R14,R4
	or R0,R4
	mov #1,R0
	mov.l lbl_00000124,R3
	mov.l R4,@(8,R12)
	mov #8,R2
	mov.l @(24,R13),R6
	mov #27,R1
	mov #4,R5
	and R6,R0
	and #1,R0
	rotr R0
	mov R0,R4
	and R3,R4
	mov.l lbl_0000012C,R3
	and R6,R2
	mov.l @(8,R13),R0
	shld R1,R2
	or R2,R4
	mov.l lbl_00000128,R2
	and R3,R0
	mov R6,R3
	and R5,R3
	mov.l lbl_00000130,R1
	not R3,R3
	and R5,R3
	and R2,R4
	shll16 R3
	or R0,R4
	shll8 R3
	and R1,R4
	or R3,R4
	mov #16,R3
	mov.l @(24,R12),R5
	mov #21,R2
	mov.l lbl_0000013C,R1
	and R3,R6
	mov.l lbl_00000134,R0
	shlr16 R5
	mov.l lbl_00000138,R3
	shld R2,R6
	mov.l @(28,R13),R2
	and R1,R5
	mov.w lbl_0000011A,R1
	and R0,R4
	mov R5,R0
	or R6,R4
	shlr2 R2
	and R3,R4
	shlr R2
	cmp/eq R1,R0
	bt/s lbl_000000F6
	or R2,R4
	mov.w lbl_0000011C,R1
	cmp/eq R1,R0
	bt lbl_000000F6
	mov.w lbl_0000011E,R1
	cmp/eq R1,R0
	bt lbl_000000FC
	mov.w lbl_00000120,R1
	cmp/eq R1,R0
	bt lbl_000000FC
	bra lbl_0000010E
	nop
lbl_000000F6:
	mov.l @(4,R12),R0
	bra lbl_00000100
	and #63,R0
lbl_000000FC:
	mov.l @(4,R12),R0
	and #48,R0
lbl_00000100:
	mov.l lbl_00000140,R2
	mov R0,R5
	mov #21,R3
	and R4,R2
	shad R3,R5
	mov R5,R4
	or R2,R4
lbl_0000010E:
	mov.l R4,@(12,R12)
	lds.l @R15+,PR
	mov.l @R15+,R12
	mov.l @R15+,R13
	rts
	mov.l @R15+,R14
lbl_0000011A:
	.data.w h'0500
lbl_0000011C:
	.data.w h'0600
lbl_0000011E:
	.data.w h'0700
lbl_00000120:
	.data.w h'0800
	.data.w h'0000
lbl_00000124:
	.data.l h'BFFFFFFF
lbl_00000128:
	.data.l h'C7FFFFFF
lbl_0000012C:
	.data.l h'38000000
lbl_00000130:
	.data.l h'FBFFFFFF
lbl_00000134:
	.data.l h'FDFFFFFF
lbl_00000138:
	.data.l h'FF800000
lbl_0000013C:
	.data.l h'0000FF00
lbl_00000140:
	.data.l _ConvertUVnum
