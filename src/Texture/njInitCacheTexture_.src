	.EXPORT _njCacheTextureMalloc
	.EXPORT _njInitCacheTextureBuffer
	.EXPORT _njCacheTextureFree
	.SECTION PSG,CODE,ALIGN=4
_njInitCacheTextureBuffer:
	mov.l lbl_000000E0,R6
	mov #1,R0
	mov #36,R3
	mov.w lbl_000000DE,R7
	mov.l R3,@(4,R6)
	mov R6,R3
	mov.l lbl_000000E4,R1
	mov.w R7,@R6
	mov.w R0,@(2,R6)
	mov #0,R0
	mov.l R4,@(12,R6)
	mov.l R4,@(8,R6)
	mov.l R5,@(4,R4)
	mov.w R7,@R4
	mov.w R0,@(2,R4)
	mov.l R6,@(12,R4)
	mov.l R3,@(8,R4)
	mov.l @(8,R6),R2
	rts
	mov.l R2,@R1
_njCacheTextureMalloc:
	mov.l R14,@-R15
	mov R4,R6
	mov.l R13,@-R15
	add #63,R6
	mov.l lbl_000000E8,R2
	mov #-32,R3
	mov.w lbl_000000DE,R13
	mov #64,R5
	mov #0,R7
	and R3,R6
	mov #1,R14
	bra lbl_00000080
	mov.l @R2,R4
lbl_00000042:
	mov.w @(2,R4),R0
	tst R0,R0
	bf lbl_0000007E
	mov.l @(4,R4),R3
	cmp/ge R6,R3
	bf lbl_0000007E
	mov.l @(4,R4),R1
	sub R6,R1
	cmp/gt R5,R1
	bf lbl_00000074
	mov.l @(4,R4),R2
	mov R6,R5
	add R4,R5
	mov R7,R0
	sub R6,R2
	mov.l R2,@(4,R5)
	mov.w R13,@R5
	mov.w R0,@(2,R5)
	mov.l @(8,R4),R3
	mov.l R5,@(12,R3)
	mov.l @(8,R4),R2
	mov.l R2,@(8,R5)
	mov.l R5,@(8,R4)
	mov.l R4,@(12,R5)
	mov.l R6,@(4,R4)
lbl_00000074:
	mov R14,R0
	mov.w R0,@(2,R4)
	mov R4,R0
	bra lbl_00000088
	add #32,R0
lbl_0000007E:
	mov.l @(8,R4),R4
lbl_00000080:
	mov.l lbl_000000E0,R3
	cmp/eq R3,R4
	bf lbl_00000042
	mov #0,R0
lbl_00000088:
	mov.l @R15+,R13
	rts
	mov.l @R15+,R14
_njCacheTextureFree:
	add #-32,R4
	mov.w lbl_000000DE,R2
	mov.w @R4,R3
	cmp/eq R2,R3
	bf lbl_000000DA
	mov.l @(12,R4),R1
	mov.w @(2,R1),R0
	tst R0,R0
	bf lbl_000000B8
	mov.l @(12,R4),R2
	mov.l @(8,R4),R3
	mov.l R2,@(12,R3)
	mov.l @(8,R4),R2
	mov.l @(12,R4),R3
	mov.l R2,@(8,R3)
	mov.l @(12,R4),R3
	mov.l @(4,R4),R2
	mov.l @(4,R3),R1
	add R2,R1
	mov.l R1,@(4,R3)
	mov.l @(12,R4),R4
lbl_000000B8:
	mov.l @(8,R4),R3
	mov.w @(2,R3),R0
	tst R0,R0
	bf lbl_000000D6
	mov.l @(8,R4),R2
	mov.l @(8,R2),R3
	mov.l R4,@(12,R3)
	mov.l @(8,R4),R2
	mov.l @(4,R4),R1
	mov.l @(4,R2),R3
	add R3,R1
	mov.l R1,@(4,R4)
	mov.l @(8,R4),R2
	mov.l @(8,R2),R3
	mov.l R3,@(8,R4)
lbl_000000D6:
	mov #0,R0
	mov.w R0,@(2,R4)
lbl_000000DA:
	rts
	nop
lbl_000000DE:
	.data.w h'00a5
lbl_000000E0:
	.data.l BSG_0
lbl_000000E4:
	.data.l BSG_36
lbl_000000E8:
	.data.l BSG_8
	.SECTION BSG,DATA,ALIGN=4
BSG_0:
	.res.b h'8
BSG_8:
	.res.b h'1C
BSG_36:
	.res.b h'4
