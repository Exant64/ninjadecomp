	.IMPORT _kmGetCurrentVertexOffset
	.IMPORT _kmiMemCopy8
	.IMPORT _kmiCurrentListState
	.EXPORT _kmSetUserClipping
	.EXPORT _kmStartVertexStrip
	.EXPORT _kmSetVertex
	.SECTION PSG,CODE,ALIGN=32
_kmStartVertexStrip:
	mov.l R14,@-R15
	mov.l R13,@-R15
	mov.l R12,@-R15
	sts.l PR,@-R15
	add #-4,R15
	mov R4,R14
	mov.l @(8,R14),R4
	mov.l lbl_000001E0,R2
	mov.l @R4,R5
	mov.l @(4,R4),R13
	mov R5,R4
	shll2 R4
	mov.l R4,@R15
	mov.l @R14,R0
	mov.l @(4,R14),R5
	mov.l @(R0,R4),R4
	mov R4,R6
	shlr16 R6
	shlr8 R6
	mov.l R6,@R2
	mov.l lbl_000001E4,R3
	mov.l R6,@R3
	mov.l lbl_000001E8,R12
	mov R13,R6
	mov.l lbl_000001EC,R1
	mov.l lbl_000001F0,R2
	and R4,R12
	or R1,R12
	jsr @R2
	mov R12,R4
	pref @R12
	mov R13,R0
	cmp/eq #64,R0
	bf lbl_00000048
	add #32,R12
	pref @R12
lbl_00000048:
	mov.l @R14,R0
	shlr2 R13
	mov.l @R15,R2
	shll2 R13
	mov.l @(R0,R2),R1
	add R13,R1
	mov.l R1,@(R0,R2)
	mov #0,R0
	add #4,R15
	lds.l @R15+,PR
	mov.l @R15+,R12
	mov.l @R15+,R13
	rts
	mov.l @R15+,R14
_kmSetVertex:
	mov.l R14,@-R15
	mov.l R13,@-R15
	mov.l R12,@-R15
	sts.l PR,@-R15
	add #-4,R15
	mov R4,R13
	mov.l lbl_000001F4,R3
	mov.l lbl_000001E0,R1
	mov R7,R12
	mov.l R6,@R3
	mov.l @(8,R13),R4
	mov.l @R4,R4
	shll2 R4
	mov.l R4,@R15
	mov.l @R13,R0
	mov.l @(R0,R4),R4
	mov R4,R6
	shlr16 R6
	shlr8 R6
	mov.l R6,@R1
	mov.l lbl_000001E4,R2
	mov.l R6,@R2
	mov.l lbl_000001E8,R14
	mov R12,R6
	mov.l lbl_000001EC,R3
	mov.l lbl_000001F0,R1
	and R4,R14
	or R3,R14
	jsr @R1
	mov R14,R4
	pref @R14
	mov R12,R0
	cmp/eq #64,R0
	bf lbl_000000AC
	add #32,R14
	pref @R14
lbl_000000AC:
	mov.l @R13,R0
	shar R12
	mov.l @R15,R2
	shar R12
	shll2 R12
	mov.l @(R0,R2),R1
	add R12,R1
	mov.l R1,@(R0,R2)
	mov #0,R0
	add #4,R15
	lds.l @R15+,PR
	mov.l @R15+,R12
	mov.l @R15+,R13
	rts
	mov.l @R15+,R14
_kmSetUserClipping:
	mov.l R14,@-R15
	mov.l R13,@-R15
	mov.l R12,@-R15
	mov.l R11,@-R15
	mov.l R10,@-R15
	mov.l R9,@-R15
	mov.l R8,@-R15
	sts.l PR,@-R15
	add #-44,R15
	mov.l lbl_000001E4,R10
	mov R5,R12
	mov.l lbl_000001F8,R3
	mov R12,R13
	mov R10,R11
	mov.l lbl_000001E8,R9
	mov.l lbl_000001EC,R8
	shll2 R13
	mov R4,R14
	mov.l R6,@(8,R15)
	mov.l R7,@(4,R15)
	add #-4,R11
	jsr @R3
	mov R12,R4
	cmp/eq #8,R0
	bt lbl_00000180
	mov.l @(4,R14),R6
	mov #1,R3
	mov.l lbl_000001FC,R7
	tst R3,R12
	mov.l lbl_00000200,R4
	mov.l @R6,R6
	mov R7,R5
	bt/s lbl_00000114
	and R6,R4
	mov.l lbl_00000204,R1
	bra lbl_00000116
	nop
lbl_00000114:
	mov.l lbl_00000208,R1
lbl_00000116:
	or R1,R4
	mov.l R4,@R5
	mov R7,R5
	mov.l @R14,R0
	mov.l @(R0,R13),R4
	mov R4,R6
	shlr16 R6
	shlr8 R6
	mov.l R6,@R11
	mov.l R6,@R10
	mov R4,R12
	mov.l lbl_000001F0,R3
	and R9,R12
	mov #32,R6
	or R8,R12
	jsr @R3
	mov R12,R4
	pref @R12
	mov.l @R14,R0
	mov #2,R2
	mov.l @(R0,R13),R3
	add #32,R3
	mov.l R3,@(R0,R13)
	bra lbl_0000017A
	mov.l R2,@R15
lbl_00000148:
	mov.l @R14,R0
	mov.l lbl_0000020C,R5
	mov.l @(R0,R13),R4
	mov R4,R6
	shlr16 R6
	shlr8 R6
	mov.l R6,@R11
	mov.l R6,@R10
	mov R4,R12
	mov.l lbl_000001F0,R3
	and R9,R12
	mov #64,R6
	or R8,R12
	jsr @R3
	mov R12,R4
	pref @R12
	add #32,R12
	pref @R12
	mov.l @R14,R0
	mov.l @(R0,R13),R2
	add #64,R2
	mov.l R2,@(R0,R13)
	mov.l @R15,R3
	add #-1,R3
	mov.l R3,@R15
lbl_0000017A:
	mov.l @R15,R2
	tst R2,R2
	bf lbl_00000148
lbl_00000180:
	mov.l lbl_00000210,R3
	mov R15,R4
	add #12,R4
	mov.l R3,@R4
	mov #76,R0
	mov.l @(8,R15),R2
	mov R4,R5
	mov.l R2,@(16,R4)
	mov.l @(4,R15),R3
	mov.l R3,@(20,R4)
	mov.l @(R0,R15),R2
	mov #80,R0
	mov.l R2,@(24,R4)
	mov.l @(R0,R15),R3
	mov.l R3,@(28,R4)
	mov.l @R14,R0
	mov.l @(R0,R13),R6
	mov R6,R4
	shlr16 R4
	shlr8 R4
	mov.l R4,@R11
	mov.l R4,@R10
	mov R6,R12
	mov.l lbl_000001F0,R3
	and R9,R12
	mov #32,R6
	or R8,R12
	jsr @R3
	mov R12,R4
	pref @R12
	mov.l @R14,R0
	mov.l @(R0,R13),R3
	add #32,R3
	mov.l R3,@(R0,R13)
	mov #0,R0
	add #44,R15
	lds.l @R15+,PR
	mov.l @R15+,R8
	mov.l @R15+,R9
	mov.l @R15+,R10
	mov.l @R15+,R11
	mov.l @R15+,R12
	mov.l @R15+,R13
	rts
	mov.l @R15+,R14
	nop
	nop
	nop
lbl_000001E0:
	.data.l h'FF000038
lbl_000001E4:
	.data.l h'FF00003C
lbl_000001E8:
	.data.l h'03FFFFFF
lbl_000001EC:
	.data.l h'E0000000
lbl_000001F0:
	.data.l _kmiMemCopy8
lbl_000001F4:
	.data.l _kmiCurrentListState+8
lbl_000001F8:
	.data.l _kmGetCurrentVertexOffset
lbl_000001FC:
	.data.l DSG_0
lbl_00000200:
	.data.l h'00830000
lbl_00000204:
	.data.l h'81000040
lbl_00000208:
	.data.l h'A0000000
lbl_0000020C:
	.data.l DSG_32
lbl_00000210:
	.data.l h'20000000
	.data.w h'0000
	.data.w h'0000
	.data.w h'0000
	.data.w h'0000
	.data.w h'0000
	.data.w h'0000
	.SECTION DSG,DATA,ALIGN=4
DSG_0:
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0001
	.data.b h'0040
	.data.b h'0004
	.data.b h'0080
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
DSG_32:
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'00f0
	.data.b h'0000
	.data.b h'0000
	.data.b h'00c0
	.data.b h'00bf
	.data.b h'0000
	.data.b h'0000
	.data.b h'0080
	.data.b h'00bf
	.data.b h'00cd
	.data.b h'00cc
	.data.b h'00cc
	.data.b h'003d
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'00bf
	.data.b h'0000
	.data.b h'0000
	.data.b h'0080
	.data.b h'00bf
	.data.b h'00cd
	.data.b h'00cc
	.data.b h'00cc
	.data.b h'003d
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'00bf
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'00bf
	.data.b h'00cd
	.data.b h'00cc
	.data.b h'00cc
	.data.b h'003d
	.data.b h'0000
	.data.b h'0000
	.data.b h'00c0
	.data.b h'00bf
	.data.b h'0000
	.data.b h'0000
	.data.b h'0000
	.data.b h'00bf
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
	.data.b h'00ff
